package org.molgen.genomeCATPro.cat.maparr;
/**
 * @name ExportMapDialog.java
 * 
 * 
 * @author Katrin Tebel <tebel at molgen.mpg.de>
 * 
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. 
 * You can obtain a copy of the License at http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */
import java.awt.Cursor;
import java.io.File;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.molgen.genomeCATPro.datadb.dbentities.MapData;
import org.molgen.genomeCATPro.datadb.dbentities.MapDetail;
import org.molgen.genomeCATPro.datadb.service.MapService;
import org.openide.util.NbPreferences;

/**
 *
 * @author  tebel
 */
public class ExportMapDialog extends javax.swing.JDialog {

    MapDetail mapDetail = null;
    List<MapData> list = null;

    /** Creates new form ExportMapDialog */
    public ExportMapDialog(MapDetail m) {
        super((JFrame) null, true);
        this.mapDetail = m;
        this.initComponents();
        setLocationRelativeTo(null);
    }

    public MapDetail getMapDetail() {
        return mapDetail;
    }

    public void setMapDetail(MapDetail mapDetail) {
        this.mapDetail = mapDetail;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        jTextFieldMapName = new javax.swing.JTextField();
        cbInclName = new javax.swing.JCheckBox();
        cbInclPos = new javax.swing.JCheckBox();
        cbInclNull = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        textFileName = new javax.swing.JTextField();
        jButtonBrowse = new javax.swing.JButton();
        jButtonExport = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        textMsg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.jLabel1.text")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${mapDetail.mapName}"), jTextFieldMapName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        cbInclName.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.cbInclName.text")); // NOI18N

        cbInclPos.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.cbInclPos.text")); // NOI18N

        cbInclNull.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.cbInclNull.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.jLabel2.text")); // NOI18N

        textFileName.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.textFileName.text")); // NOI18N

        jButtonBrowse.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jButtonBrowse.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.jButtonBrowse.text")); // NOI18N
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });

        jButtonExport.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.jButtonExport.text")); // NOI18N
        jButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportActionPerformed(evt);
            }
        });

        jButtonCancel.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.jButtonCancel.text")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        textMsg.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        textMsg.setForeground(java.awt.Color.red);
        textMsg.setText(org.openide.util.NbBundle.getMessage(ExportMapDialog.class, "ExportMapDialog.textMsg.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbInclNull)
                                    .addComponent(cbInclPos)
                                    .addComponent(cbInclName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addComponent(jTextFieldMapName, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFileName, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))))
                .addGap(34, 34, 34)
                .addComponent(jButtonBrowse)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jButtonExport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel)
                .addContainerGap(220, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldMapName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbInclName)
                .addGap(4, 4, 4)
                .addComponent(cbInclPos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbInclNull)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(textFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBrowse))
                .addGap(18, 18, 18)
                .addComponent(textMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonExport)
                    .addComponent(jButtonCancel))
                .addGap(25, 25, 25))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
    this.setVisible(false);

}//GEN-LAST:event_jButtonCancelActionPerformed

private void jButtonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportActionPerformed
    try {
        this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
        this.list = MapService.getMapDataList(mapDetail);
        Map.exportMapping(mapDetail, list,
                this.cbInclName.isSelected(),
                this.cbInclPos.isSelected(),
                this.cbInclNull.isSelected(),
                null, 0, 0,
                this.textFileName.getText());
        this.textMsg.setText("done! ");
    } catch (Exception ex) {
        Logger.getLogger(ExportMapDialog.class.getName()).log(Level.SEVERE,
                "exportMapping", ex);
        JOptionPane.showMessageDialog(this, "error  - see logfile for more information: ");
    }
    this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

}//GEN-LAST:event_jButtonExportActionPerformed

private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseActionPerformed
    String path = NbPreferences.forModule(ExportMapDialog.class).get("pathPreference", "");
    JFileChooser importFileChooser = new JFileChooser(path);
    importFileChooser.setSelectedFile(new File(this.mapDetail.getMapName() + ".txt"));

    int returnVal = importFileChooser.showSaveDialog(this);
    if (returnVal != JFileChooser.APPROVE_OPTION) {
        return;
    }

    this.textFileName.setText(importFileChooser.getSelectedFile().getPath());

    Logger.getLogger(ExportMapDialog.class.getName()).log(Level.INFO,
            "You chose to export to: " +
            this.textFileName.getText());

    NbPreferences.forModule(ExportMapDialog.class).put("pathPreference", this.textFileName.getText());

//this.directory = importFileChooser.getSelectedFile().getParentFile().getPath();
}//GEN-LAST:event_jButtonBrowseActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbInclName;
    private javax.swing.JCheckBox cbInclNull;
    private javax.swing.JCheckBox cbInclPos;
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonExport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextFieldMapName;
    private javax.swing.JTextField textFileName;
    private javax.swing.JLabel textMsg;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
