package org.molgen.genomeCATPro.guimodul.cghpro;

/**
 * @name RINGORunDialog.java
 *
 * 
 * @author Katrin Tebel <tebel at molgen.mpg.de>
 * 
 * Copyright Apr 7, 2009 Katrin Tebel <tebel at molgen.mpg.de>.
 * The contents of props file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use props file except in compliance with the
 * License. 
 * You can obtain a copy of the License at http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  
 * props program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import org.molgen.genomeCATPro.cghpro.chip.ChipFeature;

import org.molgen.genomeCATPro.cghpro.chip.PeakWorker;
import org.molgen.genomeCATPro.common.Informable;
import org.molgen.genomeCATPro.common.Utils;
import org.molgen.genomeCATPro.datadb.dbentities.Data;

/**
 *
 * @author  tebel
 */
public class RINGORunDialog extends javax.swing.JDialog {

    Data data;
    CGHProTopComponent win = null;
    final static Integer default_probeCount = 3;
    final static Integer default_probeDist = 0;
   

    /** Creates new form RINGORunDialog */
    public RINGORunDialog(java.awt.Frame parent, boolean modal, Data s) {
        super(parent, modal);
        this.data = s;

        initComponents();
        this.fieldNofProbes.setText(default_probeCount.toString());
        this.fieldProbeDistance.setText(RINGORunDialog.default_probeDist.toString());
        this.fieldThreshold.setText(Double.toString(Double.NaN));

        setLocationRelativeTo(null);
        this.jButtonShow.setEnabled(false);

        this.jTextFieldSampleName.setText(Utils.getUniquableName(this.data.getName()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMsg = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSampleName = new javax.swing.JTextField();
        jButtonRun = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jLabelPrompt = new javax.swing.JLabel();
        jButtonShow = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cbDeleteFiles = new javax.swing.JCheckBox();
        cbUserThreshold = new javax.swing.JCheckBox();
        fieldThreshold = new javax.swing.JFormattedTextField();
        fieldNofProbes = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        cbUserProbeDist = new javax.swing.JCheckBox();
        fieldProbeDistance = new javax.swing.JFormattedTextField();
        cbSmoothData = new javax.swing.JCheckBox();
        cbNormalize = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.title")); // NOI18N

        jTextAreaMsg.setColumns(20);
        jTextAreaMsg.setEditable(false);
        jTextAreaMsg.setRows(5);
        jScrollPane1.setViewportView(jTextAreaMsg);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel1.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "CBSRunDialog.jLabel1.text")); // NOI18N

        jTextFieldSampleName.setFont(new java.awt.Font("Dialog", 1, 12));
        jTextFieldSampleName.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "CBSRunDialog.jTextFieldSampleName.text")); // NOI18N
        jTextFieldSampleName.setFocusable(false);
        jTextFieldSampleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSampleNameActionPerformed(evt);
            }
        });

        jButtonRun.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "CBSRunDialog.jButtonRun.text")); // NOI18N
        jButtonRun.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunActionPerformed(evt);
            }
        });

        jButtonClose.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "CBSRunDialog.jButtonClose.text")); // NOI18N
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel2.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "CBSRunDialog.jLabel2.text")); // NOI18N

        jLabelPrompt.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabelPrompt.setText("press <start> to run Ringo!");

        jButtonShow.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "CBSRunDialog.jButtonShow.text")); // NOI18N
        jButtonShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.jPanel1.border.title"))); // NOI18N

        cbDeleteFiles.setSelected(true);
        cbDeleteFiles.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.cbDeleteFiles.text")); // NOI18N

        cbUserThreshold.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.cbUserThreshold.text")); // NOI18N
        cbUserThreshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUserThresholdActionPerformed(evt);
            }
        });

        fieldThreshold.setEditable(false);
        fieldThreshold.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        fieldThreshold.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.fieldThreshold.text_1")); // NOI18N

        fieldNofProbes.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fieldNofProbes.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.fieldNofProbes.text_2")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.jLabel3.text")); // NOI18N

        cbUserProbeDist.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.cbUserProbeDist.text")); // NOI18N
        cbUserProbeDist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUserProbeDistActionPerformed(evt);
            }
        });

        fieldProbeDistance.setEditable(false);
        fieldProbeDistance.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fieldProbeDistance.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.fieldProbeDistance.text")); // NOI18N

        cbSmoothData.setSelected(true);
        cbSmoothData.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.cbSmoothData.text")); // NOI18N
        cbSmoothData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSmoothDataActionPerformed(evt);
            }
        });

        cbNormalize.setSelected(true);
        cbNormalize.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.cbNormalize.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDeleteFiles)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbUserThreshold)
                            .addComponent(jLabel3)
                            .addComponent(cbUserProbeDist))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fieldProbeDistance)
                            .addComponent(fieldNofProbes, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                            .addComponent(fieldThreshold, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbNormalize)
                    .addComponent(cbSmoothData))
                .addGap(99, 99, 99))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cbNormalize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSmoothData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbUserThreshold)
                    .addComponent(fieldThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(fieldNofProbes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbUserProbeDist, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fieldProbeDistance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbDeleteFiles))
        );

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel4.setText(org.openide.util.NbBundle.getMessage(RINGORunDialog.class, "RINGORunDialog.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jButtonRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonShow)
                        .addGap(113, 113, 113)
                        .addComponent(jButtonClose))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSampleName, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelPrompt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE))))
                .addGap(32, 32, 32))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonClose, jButtonRun, jButtonShow});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSampleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPrompt)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRun)
                    .addComponent(jButtonClose)
                    .addComponent(jButtonShow))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jTextFieldSampleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSampleNameActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextFieldSampleNameActionPerformed

private void jButtonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunActionPerformed
    this.jButtonClose.setEnabled(false);
    this.jButtonRun.setEnabled(false);
    this.jButtonShow.setEnabled(false);
    this.jLabelPrompt.setText("Running .... please wait");


    Informable informable = new Informable() {

        @Override
        public void messageChanged(String message) {

            jTextAreaMsg.append(message + "\n");
        }
    };
    informable.messageChanged("Start RINGO....");
    informable.messageChanged("Get Data for " + data.getName());
    this.repaint();

    win = CGHProTopComponent.findInstance(data);
    double threshold = 0.0;
    int probeDist = 0;
    if (this.cbUserThreshold.isSelected()) {
        threshold = Double.valueOf(this.fieldThreshold.getText());
    }
    else
        threshold = Double.NaN;
    
    if (this.cbUserProbeDist.isSelected()) {
        probeDist = Integer.valueOf(this.fieldProbeDistance.getText());
    }
    boolean smooth = this.cbSmoothData.isSelected();
    boolean normalize = this.cbNormalize.isSelected();
    boolean deleteFiles = this.cbDeleteFiles.isSelected();

    int probeCount = Integer.valueOf(this.fieldNofProbes.getText());

    Logger.getLogger(RINGORunDialog.class.getName()).log(
            Level.INFO, "Start RINGO for: " +
            win.getChip().getDataEntity().getName());

    Logger.getLogger(PeakWorker.class.getName()).setLevel(Level.INFO);

    PeakWorker worker = new PeakWorkerImpl(
            win.getChip(), this.jTextFieldSampleName.getText(),
            normalize, smooth,
            threshold, probeDist, probeCount, deleteFiles, informable);
    PropertyChangeListener listener = new PropertyChangeListener() {

        public void propertyChange(PropertyChangeEvent evt) {
            if ("progress".equals(evt.getPropertyName())) {
                jProgressBar.setValue((Integer) evt.getNewValue());
            }
        }
    };
    worker.addPropertyChangeListener(listener);

    // Start the worker. Note that control is 
    // returned immediately
    worker.execute();

}//GEN-LAST:event_jButtonRunActionPerformed

private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
    this.dispose();

}//GEN-LAST:event_jButtonCloseActionPerformed

private void jButtonShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowActionPerformed

    win.open();
    win.requestActive();
}//GEN-LAST:event_jButtonShowActionPerformed

private void cbUserProbeDistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUserProbeDistActionPerformed
    this.fieldProbeDistance.setEditable(this.cbUserProbeDist.isSelected());

    this.fieldProbeDistance.setText(RINGORunDialog.default_probeDist.toString());
}//GEN-LAST:event_cbUserProbeDistActionPerformed

private void cbUserThresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUserThresholdActionPerformed
    this.fieldThreshold.setEditable(this.cbUserThreshold.isSelected());
    if(this.cbUserThreshold.isSelected())
        this.fieldThreshold.setText("0.0");
    else
        this.fieldThreshold.setText(Double.toString(Double.NaN));

}//GEN-LAST:event_cbUserThresholdActionPerformed

private void cbSmoothDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSmoothDataActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_cbSmoothDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                RINGORunDialog dialog = new RINGORunDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbDeleteFiles;
    private javax.swing.JCheckBox cbNormalize;
    private javax.swing.JCheckBox cbSmoothData;
    private javax.swing.JCheckBox cbUserProbeDist;
    private javax.swing.JCheckBox cbUserThreshold;
    private javax.swing.JFormattedTextField fieldNofProbes;
    private javax.swing.JFormattedTextField fieldProbeDistance;
    private javax.swing.JFormattedTextField fieldThreshold;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonRun;
    private javax.swing.JButton jButtonShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelPrompt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaMsg;
    private javax.swing.JTextField jTextFieldSampleName;
    // End of variables declaration//GEN-END:variables

    private class PeakWorkerImpl extends PeakWorker {

        public PeakWorkerImpl(ChipFeature c, String name,
                boolean normalize, boolean smooth,
                double threshold, int probeDist, int probeCount, boolean deleteFiles, 
                
                Informable inf) {
            super(c, name, normalize, smooth, threshold, probeDist, probeCount, deleteFiles, inf);
        }

        // This method is invoked when the worker is finished
        // its task
        @Override
        protected void done() {
            try {
                // Get the number of matches. Note that the
                // method get will throw any exception thrown
                // during the execution of the worker.
                ChipFeature newChip = get();
                if (!newChip.getError()) {
                    win.addChip(newChip);
                    jLabelPrompt.setText("Finished ... close or rerun!");
                } else {
                    jLabelPrompt.setText("Error ... see logfile!");
                }
                jButtonClose.setEnabled(true);
                jButtonRun.setEnabled(true);
                jButtonShow.setEnabled(true);
            //progressBar.setVisible(false);
            } catch (Exception e) {
                Logger.getLogger(RINGORunDialog.class.getName()).log(Level.WARNING, "do RINGO ", e);
                JOptionPane.showMessageDialog(null, "Error", e.getMessage(), JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
