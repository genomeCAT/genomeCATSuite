package org.molgen.genomeCATPro.guimodul.platform;

/**
 * @name ConvertPlatformDialog
 *
 *
 * @author Katrin Tebel <tebel at molgen.mpg.de>
 *
 *
 * The contents of this file are subject to the terms of either the GNU General
 * Public License Version 2 only ("GPL") or the Common Development and
 * Distribution License("CDDL") (collectively, the "License"). You may not use
 * this file except in compliance with the License. You can obtain a copy of the
 * License at http://www.netbeans.org/cddl-gplv2.html or
 * nbbuild/licenses/CDDL-GPL-2-CP. See the License for the specific language
 * governing permissions and limitations under the License. This program is
 * distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.
 */
import java.awt.Cursor;
import java.io.File;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.molgen.genomeCATPro.cghpro.xport.PlatformManager;
import org.molgen.genomeCATPro.cghpro.xport.ExportPlatform;
import org.molgen.genomeCATPro.common.Utils;
import org.molgen.genomeCATPro.datadb.dbentities.PlatformData;
import org.molgen.genomeCATPro.datadb.service.PlatformService;
import org.openide.awt.HtmlBrowser.URLDisplayer;
import org.openide.util.NbPreferences;

/**
 *
 *
 */
public class ConvertPlatformDialog extends javax.swing.JDialog {

    PlatformData dataExport = null;
    PlatformData dataImport = null;
    private Object jTextFieldFileName;

    /**
     * Creates new form ExportPlatformDialog
     */
    public ConvertPlatformDialog(java.awt.Frame parent, PlatformData d) {
        super(parent, true);
        this.dataExport = d;
        this.dataImport = new PlatformData();
        //this.dataImport.copy(this.dataExport);
        this.dataImport.setName(this.dataExport.getName());
        this.dataImport.setClazz((this.dataExport.getClazz()));
        /*
         *  this.setPlatformListID(a.platformListID);
         this.setName(a.name);
         this.setCreated(a.getCreated());
         this.setGenomeRelease(a.getGenomeRelease());
         this.setModified(a.getModified());
         this.setPlatform(a.getPlattform()); // copy??
        
         this.setClazz(a.getClazz());
         this.setOriginalFile(a.originalFile);
         this.setNofSpots(a.nofSpots);
         this.setTableData(a.tableData);
         */
        this.platformDataViewExport = new PlatformDataView(this.dataExport, false);
        this.platformDataViewImport = new PlatformDataView(this.dataImport, true);

        initComponents();
    }

    public static void convertPlatformData(PlatformData data) {
        ConvertPlatformDialog d = new ConvertPlatformDialog(null, data);
        d.setLocationRelativeTo(null);
        d.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCancel = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelExport = new javax.swing.JPanel();
        jTextFieldFileNameExport = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonExport = new javax.swing.JButton();
        jButtonBrowseExport = new javax.swing.JButton();
        platformDataViewExport = platformDataViewExport;
        jPanelConvert = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButtonStep2OK = new javax.swing.JButton();
        jButtonLift = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldFileNameImport = new javax.swing.JTextField();
        jButtonBrowseImport = new javax.swing.JButton();
        jButtonImport = new javax.swing.JButton();
        platformDataViewImport = platformDataViewImport;

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonCancel.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ExportPlatformDialog.jButtonCancel.text")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ExportPlatformDialog.jLabel1.text")); // NOI18N

        jButtonExport.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ExportPlatformDialog.jButtonExport.text")); // NOI18N
        jButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportActionPerformed(evt);
            }
        });

        jButtonBrowseExport.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ExportPlatformDialog.jButtonBrowse.text")); // NOI18N
        jButtonBrowseExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelExportLayout = new javax.swing.GroupLayout(jPanelExport);
        jPanelExport.setLayout(jPanelExportLayout);
        jPanelExportLayout.setHorizontalGroup(
            jPanelExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelExportLayout.createSequentialGroup()
                .addGroup(jPanelExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelExportLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonExport)
                            .addGroup(jPanelExportLayout.createSequentialGroup()
                                .addComponent(jTextFieldFileNameExport, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBrowseExport))))
                    .addGroup(jPanelExportLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(platformDataViewExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanelExportLayout.setVerticalGroup(
            jPanelExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelExportLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(platformDataViewExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanelExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldFileNameExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBrowseExport))
                .addGap(18, 18, 18)
                .addComponent(jButtonExport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jPanelExport.TabConstraints.tabTitle"), jPanelExport); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jLabel3.text")); // NOI18N

        jButtonStep2OK.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jButtonStep2OK.text")); // NOI18N
        jButtonStep2OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStep2OKActionPerformed(evt);
            }
        });

        jButtonLift.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jButtonLift.text")); // NOI18N
        jButtonLift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLiftActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout jPanelConvertLayout = new javax.swing.GroupLayout(jPanelConvert);
        jPanelConvert.setLayout(jPanelConvertLayout);
        jPanelConvertLayout.setHorizontalGroup(
            jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConvertLayout.createSequentialGroup()
                .addContainerGap(642, Short.MAX_VALUE)
                .addComponent(jButtonStep2OK)
                .addContainerGap())
            .addGroup(jPanelConvertLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelConvertLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jButtonLift))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanelConvertLayout.setVerticalGroup(
            jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConvertLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButtonLift)
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jButtonStep2OK)
                .addContainerGap())
        );

        jLabel2.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jLabel2.AccessibleContext.accessibleName")); // NOI18N

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jPanelConvert.TabConstraints.tabTitle"), jPanelConvert); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jLabel4.text")); // NOI18N

        jButtonBrowseImport.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jButtonBrowseImport.text")); // NOI18N
        jButtonBrowseImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseImportActionPerformed(evt);
            }
        });

        jButtonImport.setText(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jButtonImport.text")); // NOI18N
        jButtonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(60, 60, 60)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonImport)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextFieldFileNameImport, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBrowseImport))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(platformDataViewImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(platformDataViewImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jButtonBrowseImport)
                    .addComponent(jTextFieldFileNameImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jButtonImport)
                .addContainerGap())
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ConvertPlatformDialog.class, "ConvertPlatformDialog.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonCancel)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCancel)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButtonBrowseExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseExportActionPerformed
    String path = NbPreferences.forModule(ConvertPlatformDialog.class).get("pathPreference", "");
    JFileChooser importFileChooser = new JFileChooser(path);
    importFileChooser.setSelectedFile(new File(this.dataExport.getTableData() + ".bed"));

    int returnVal = importFileChooser.showSaveDialog(this);
    if (returnVal != JFileChooser.APPROVE_OPTION) {
        return;
    }

    this.jTextFieldFileNameExport.setText(importFileChooser.getSelectedFile().getPath());

    Logger.getLogger(ConvertPlatformDialog.class.getName()).log(Level.INFO,
            "You chose to export to: "
            + this.jTextFieldFileNameExport.getText());

    importFileChooser.getSelectedFile().getParentFile().getPath();

    //ImportFileDialog.filePath = importFileChooser.getCurrentDirectory().toString();
    NbPreferences.forModule(ConvertPlatformDialog.class).put("pathPreference",
            importFileChooser.getSelectedFile().getParentFile().getPath());
}//GEN-LAST:event_jButtonBrowseExportActionPerformed

private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
    this.dispose();
}//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonExportActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            ExportPlatform.doExportBED(this.dataExport, this.jTextFieldFileNameExport.getText());
            JOptionPane.showMessageDialog(this, "exported into "
                    + this.jTextFieldFileNameExport.getText());
            this.jTabbedPane1.setSelectedIndex(1);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "error  - see logfile for more information: "
                    + ex.getMessage());
        }

    }
private void jButtonBrowseImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseImportActionPerformed
    String path = NbPreferences.forModule(ConvertPlatformDialog.class).get("pathPreference", "");
    JFileChooser importFileChooser = new JFileChooser(path);
    //importFileChooser.setSelectedFile(new File(this.dataExport.getTableData() + ".bed"));
    //importFileChooser.setCurrentDirectory(new File(this.directory));
    int returnVal = importFileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        this.jTextFieldFileNameImport.setText(importFileChooser.getSelectedFile().getPath());
        Logger.getLogger(ConvertPlatformDialog.class.getName()).log(Level.INFO,
                "You chose to import from: "
                + this.jTextFieldFileNameImport.getText());

    }
}//GEN-LAST:event_jButtonBrowseImportActionPerformed

private void jButtonImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImportActionPerformed
    // do import

    if (this.jTextFieldFileNameImport.getText() == null) {
        JOptionPane.showMessageDialog(this, "please set import file ");
        return;
    }
    if (this.dataImport.getGenomeRelease() == null) {
        JOptionPane.showMessageDialog(this, "please set genome release ");
        return;
    }
    List<PlatformData> datalist = PlatformService.listPlatformData(this.dataExport.getPlattform());
    for (PlatformData d : datalist) {
        if (d.getGenomeRelease().contentEquals(this.dataImport.getGenomeRelease())) {
            JOptionPane.showMessageDialog(this, "release already exists ");
            return;
        }
    }

    try {
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        Utils.makeFileAcessible(this.jTextFieldFileNameImport.getText());
        PlatformManager.doConvert(dataExport, dataImport, this.jTextFieldFileNameImport.getText());
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        JOptionPane.showMessageDialog(this, "done ");

        this.dispose();
    } catch (Exception ex) {
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        JOptionPane.showMessageDialog(this, "error, see logfile " + ex.getMessage());
    }

}//GEN-LAST:event_jButtonImportActionPerformed

private void jButtonStep2OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStep2OKActionPerformed
    this.jTabbedPane1.setSelectedIndex(2);
}//GEN-LAST:event_jButtonStep2OKActionPerformed

private void jButtonLiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLiftActionPerformed

    int nn = JOptionPane.showConfirmDialog(null,
            " call to external website (UCSC)? ",
            "external convert",
            JOptionPane.YES_NO_OPTION);

    if (nn == JOptionPane.YES_OPTION) {
        String szUrl = "http://genome.ucsc.edu/cgi-bin/hgLiftOver";
        try {
            URL url = new URL(szUrl);
            //Desktop.getDesktop().browse(new URI(szUrl));
            URLDisplayer.getDefault().showURL(url);
        } catch (Exception ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE,
                    "showUCSC", ex);
        }
    }
}//GEN-LAST:event_jButtonLiftActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseExport;
    private javax.swing.JButton jButtonBrowseImport;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonExport;
    private javax.swing.JButton jButtonImport;
    private javax.swing.JButton jButtonLift;
    private javax.swing.JButton jButtonStep2OK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelConvert;
    private javax.swing.JPanel jPanelExport;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldFileNameExport;
    private javax.swing.JTextField jTextFieldFileNameImport;
    private org.molgen.genomeCATPro.guimodul.platform.PlatformDataView platformDataViewExport;
    private org.molgen.genomeCATPro.guimodul.platform.PlatformDataView platformDataViewImport;
    // End of variables declaration//GEN-END:variables
}
