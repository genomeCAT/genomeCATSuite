package org.molgen.genomeCATPro.guimodul.data;

/**
 * @name WebPositionPanel
 *
 *
 * @author Katrin Tebel <tebel at molgen.mpg.de>
 * This file is part of the CGHPRO software package. Copyright Jan 19, 2010
 * Katrin Tebel <tebel at molgen.mpg.de>. The contents of this file are subject
 * to the terms of either the GNU General Public License Version 2 only ("GPL")
 * or the Common Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the License.
 * You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP.
 * See the License for the specific language governing permissions and
 * limitations under the License. This program is distributed in the hope that
 * it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.molgen.genomeCATPro.common.Defaults;
import org.molgen.genomeCATPro.guimodul.util.BareBonesBrowserLaunch;
import org.molgen.genomeCATPro.annotation.Region;

public class WebPositionPanel extends javax.swing.JPanel {

    static List<Region> list = null;
    static int iList = -1;
    final static int sizeList = 10;
    private static WebPositionPanel instance;
    private PropertyChangeSupport changeSupport;

    /**
     * Creates new form GlobalPositionPanel
     */
    WebPositionPanel() {
        changeSupport = new PropertyChangeSupport(this);
        list = new Vector<Region>();

        initComponents();

    }

    public static WebPositionPanel getWebPositionPanel() {
        if (instance == null) {
            instance = new WebPositionPanel();
        }
        return instance;
    }

    public static void setActPosition(Region r) {
        if (r != null) {

            for (Region rr : list) {
                if (rr.equalsByPos(r)) {
                    return;
                }
            }
            iList = iList >= sizeList ? iList = 0 : ++iList;
            r.setName(Integer.toString(iList));
            list.add(iList, r);
        }
    }

    /**
     *
     * @return
     */
    public static Vector<Region> getPositionList() {
        return (Vector<Region>) list;
    }

    public static Region getActPosition() {
        if (iList >= 0) {
            return list.get(iList);
        } else {
            return null;
        }
    }

    /*
    
     public static void setWebPositionChrom(String text) {
     getWebPositionPanel().setSzChrom(text);
     }
    
     public static void setWebPositionStart(String text) {
     getWebPositionPanel().setSzStart(text);
     }
    
     public static void setWebPositionEnd(String text) {
     getWebPositionPanel().setSzEnd(text);
     }
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButtonBrowse = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButtonBrowse.setBackground(new java.awt.Color(255, 255, 255));
        jButtonBrowse.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jButtonBrowse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/molgen/genomeCATPro/guimodul/data/web-browser.png"))); // NOI18N
        jButtonBrowse.setText(org.openide.util.NbBundle.getMessage(WebPositionPanel.class, "WebPositionPanel.jButtonBrowse.text")); // NOI18N
        jButtonBrowse.setBorder(null);
        jButtonBrowse.setBorderPainted(false);
        jButtonBrowse.setDisabledSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/org/molgen/genomeCATPro/guimodul/data/web-browser.png"))); // NOI18N
        jButtonBrowse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonBrowse.setInheritsPopupMenu(true);
        jButtonBrowse.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonBrowse.setMaximumSize(new java.awt.Dimension(70, 40));
        jButtonBrowse.setMinimumSize(new java.awt.Dimension(63, 25));
        jButtonBrowse.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/org/molgen/genomeCATPro/guimodul/data/web-browser.png"))); // NOI18N
        jButtonBrowse.setVerifyInputWhenFocusTarget(false);
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButtonBrowse.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(WebPositionPanel.class, "GlobalPositionJPanel.jButton1.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseActionPerformed
    Region r = WebPositionPanel.getActPosition();
    if (r == null) {
        return;
    }
    String szUrl
            = "http://genome.ucsc.edu/cgi-bin/hgTracks?clade=vertebrate&org=Human&db="
            + Defaults.GenomeRelease.toRelease(
                    GlobalPositionDataPanel.getGlobalPositionDataPanel().getSzRelease()).toShortString() + "&position="
            + r.getChrom() + "%3A" + r.getChromStart()
            + "-" + r.getChromEnd() + "&Submit=submit";

    Logger.getLogger(this.getClass().getName()).log(Level.INFO, szUrl);
    //URL url;
    try {
        //url = new URL(szUrl);
        //Desktop.getDesktop().browse(new URI(szUrl));
        if (java.awt.Desktop.isDesktopSupported()) {
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(szUrl));
        } else {
            BareBonesBrowserLaunch.openURL(szUrl);
            //URLDisplayer.getDefault().showURL(url);
        }
    } catch (Exception ex) {
        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE,
                "showUCSC", ex);
    }

}//GEN-LAST:event_jButtonBrowseActionPerformed
    @Override
    public void addPropertyChangeListener(PropertyChangeListener listener) {
        changeSupport.addPropertyChangeListener(listener);
        /*  try {
            if (this.changeSupport == null) {
                return;
            }
            changeSupport.addPropertyChangeListener(listener);
        } catch (Exception e) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE,
                    "add LIstener", e);
            throw e;

        }*/
    }

    @Override
    public void removePropertyChangeListener(PropertyChangeListener listener) {
        changeSupport.removePropertyChangeListener(listener);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
