package org.molgen.genomeCATPro.guimodul.data;

/**
 * @name GlobalPositionPanel
 *
 * Created on August 12, 2011, 12:34 PM
 * @author Katrin Tebel <tebel at molgen.mpg.de>
 *
 *
 * The contents of this file are subject to the terms of either the GNU General
 * Public License Version 2 only ("GPL") or the Common Development and
 * Distribution License("CDDL") (collectively, the "License"). You may not use
 * this file except in compliance with the License. You can obtain a copy of the
 * License at http://www.netbeans.org/cddl-gplv2.html or
 * nbbuild/licenses/CDDL-GPL-2-CP. See the License for the specific language
 * governing permissions and limitations under the License. This program is
 * distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.
 */
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JPanel;
import org.molgen.genomeCATPro.annotation.Region;

public class GlobalPositionDataPanel extends JPanel {

    String szCurrPosition = "";
    String szRelease = "";
    String szDetailPos = "";
    String szDetailInfo = "";

    private static GlobalPositionDataPanel instance;
    private PropertyChangeSupport changeSupport;

    /**
     * Creates new form GlobalPositionPanel
     */
    GlobalPositionDataPanel() {
        changeSupport = new PropertyChangeSupport(this);
        initComponents();

    }

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        changeSupport.addPropertyChangeListener(listener);
    }

    public void removePropertyChangeListener(PropertyChangeListener listener) {
        changeSupport.removePropertyChangeListener(listener);
    }

    public static synchronized GlobalPositionDataPanel getGlobalPositionDataPanel() {
        if (instance == null) {
            instance = new GlobalPositionDataPanel();
        }
        return instance;
    }

    public String getSzCurrPosition() {
        return szCurrPosition;
    }

    public void setSzCurrPosition(String txt) {
        String old = this.szCurrPosition;
        szCurrPosition = txt;
        changeSupport.firePropertyChange("szCurrPosition", old, szCurrPosition);
    }

    public String getSzRelease() {
        return szRelease;
    }

    public void setSzRelease(String szRelease) {
        String old = this.szRelease;
        this.szRelease = szRelease;
        changeSupport.firePropertyChange("szRelease", old, szRelease);
    }

    public String getSzDetailInfo() {
        return szDetailInfo;
    }

    public void setSzDetailInfo(String szDetailInfo) {
        String old = this.szDetailInfo;
        this.szDetailInfo = szDetailInfo;
        changeSupport.firePropertyChange("szDetailInfo", old, szDetailInfo);
    }

    public String getSzDetailPos() {
        return szDetailPos;
    }

    public void setSzDetailPos(String szDetailPos) {
        String old = this.szDetailPos;
        this.szDetailPos = szDetailPos;
        changeSupport.firePropertyChange("szDetailPos", old, szDetailPos);
    }

    public static void setRelease(String text) {
        getGlobalPositionDataPanel().setSzRelease(text);
        getGlobalPositionDataPanel().setSzCurrPosition("");

    }

    public static void setCurrPosition(String text) {
        getGlobalPositionDataPanel().setSzCurrPosition(text);
    }

    public static void setDetail(Region r) {
        if (r != null) {
            //getGlobalPositionDataPanel().setSzChrom(r.getChrom());
            getGlobalPositionDataPanel().setSzDetailInfo(r.toHTMLString());
            getGlobalPositionDataPanel().setSzDetailPos(r.toString());
        } else {
            //getGlobalPositionPanel().setSzChrom("chrom");
            getGlobalPositionDataPanel().setSzDetailInfo("");
            getGlobalPositionDataPanel().setSzDetailPos("");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel2 = new javax.swing.JPanel();
        jLabelRelease = new javax.swing.JLabel();
        jLabelPosition = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(365, 40));
        setMinimumSize(new java.awt.Dimension(302, 25));
        setPreferredSize(new java.awt.Dimension(365, 30));

        jPanel2.setMaximumSize(new java.awt.Dimension(200, 40));
        jPanel2.setMinimumSize(new java.awt.Dimension(150, 25));
        jPanel2.setPreferredSize(new java.awt.Dimension(180, 30));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.PAGE_AXIS));

        jLabelRelease.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabelRelease.setMaximumSize(new java.awt.Dimension(150, 18));
        jLabelRelease.setMinimumSize(new java.awt.Dimension(100, 10));
        jLabelRelease.setOpaque(true);
        jLabelRelease.setPreferredSize(new java.awt.Dimension(120, 15));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${szRelease}"), jLabelRelease, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("release");
        binding.setSourceUnreadableValue("release");
        bindingGroup.addBinding(binding);

        jPanel2.add(jLabelRelease);

        jLabelPosition.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabelPosition.setMaximumSize(new java.awt.Dimension(150, 18));
        jLabelPosition.setMinimumSize(new java.awt.Dimension(100, 10));
        jLabelPosition.setOpaque(true);
        jLabelPosition.setPreferredSize(new java.awt.Dimension(120, 15));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${szCurrPosition}"), jLabelPosition, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("curr position");
        bindingGroup.addBinding(binding);

        jPanel2.add(jLabelPosition);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(GlobalPositionDataPanel.class, "GlobalPositionDataPanel.jLabel1.text")); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(10, 15));
        jLabel1.setMinimumSize(new java.awt.Dimension(2, 15));
        jLabel1.setPreferredSize(new java.awt.Dimension(5, 15));

        jPanel1.setMinimumSize(new java.awt.Dimension(150, 25));
        jPanel1.setPreferredSize(new java.awt.Dimension(180, 30));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        jTextField1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jTextField1.setBorder(null);
        jTextField1.setMinimumSize(new java.awt.Dimension(0, 5));
        jTextField1.setOpaque(false);
        jTextField1.setPreferredSize(new java.awt.Dimension(0, 5));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${szDetailPos}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel1.add(jTextField1);

        jTextField2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jTextField2.setBorder(null);
        jTextField2.setMinimumSize(new java.awt.Dimension(0, 10));
        jTextField2.setOpaque(false);
        jTextField2.setPreferredSize(new java.awt.Dimension(0, 10));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${szDetailInfo}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel1.add(jTextField2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelPosition;
    private javax.swing.JLabel jLabelRelease;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
